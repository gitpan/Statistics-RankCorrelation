? Statistics-RankCorrelation-0.10.tar.gz
? diff.txt
? lib/Statistics/RankCorrelation.pm.new
? lib/Statistics/RankCorrelation.pm.original
Index: lib/Statistics/RankCorrelation.pm
===================================================================
RCS file: /usr/local/cvs/Statistics-RankCorrelation/lib/Statistics/RankCorrelation.pm,v
retrieving revision 1.26
diff -r1.26 RankCorrelation.pm
12,33c12
< 
<     # Handle the unnamed single, pair and optional parameters.
<     my( $u, $v ) = ( shift, shift );
<     my %args = ();
<     # Two vectors and parameters given.
<     if( @_ ) {
<         %args = @_;
<     }
<     # Parameters given but no vectors.
<     elsif( $u =~ /^\D+$/ && $v ) {
<         $args{$u} = $v;
<     }
<     else {
<         # Empty object created.
<     }
< 
<     my $self  = {
<         x_data => $u || [],
<         y_data => $v || [],
<         sorted => $args{sorted},
<     };
< 
---
>     my $self = {};
35c14
<     $self->_init;
---
>     $self->_init(@_);
42c21,34
<     # Automatically compute the statistical ranks if given data.
---
>     # Handle vector and named parameters.
>     while( my $arg = shift ) {
>         if( ref $arg eq 'ARRAY' ) {
>                if( !defined $self->x_data ) { $self->x_data( $arg ) }
>             elsif( !defined $self->y_data ) { $self->y_data( $arg ) }
>             # XXX Handle extra data. Thanks. Love, Gene.
>         }
>         elsif( !ref $arg ) {
>             my $v = shift;
>             $self->{$arg} = defined $v ? $v : $arg;
>         }
>     }
> 
>     # Automatically compute the ranks if given data.
46c38
<         # "Co-normalize" the vectors if they are unequal.
---
>         # "Co-normalize" the vectors if they are of unequal size.
94a87
> sub spearman_rho { goto \&spearman }
216c209,210
< sub kendall_tau {
---
> sub kendall_tau { goto \&kendall }
> sub kendall {
